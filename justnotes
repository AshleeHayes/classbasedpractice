/*

Challenge:
1. Convert all 3 components to be class-based
2. Fix the small bug

import React from "react"
import ReactDOM from "react-dom"

---------------------------------------------------------------

// #1 - Function
function App() {
    return (
        <div>
            <Header />
            <Greeting />
        </div>
    )
}

class App extends React.Component {
    render() {
        return (
            <div>
            <Header />
            <Greeting />
            </div>
        )
    }
}

// #2 - Function with props

function Header(props) {
    return (
        <header>
            <p>Welcome, {props.username}!</p>
        </header>
    )
}

class Header extends React.Component {
    render() {
        return (
            <div>Welcome, {this.props}</div>
        )
    }
}
// will get bug- because in App, Header doesn't have any props being passed until username ="whatever" into Header in App






// #3 - Function with logic
function Greeting() {
    const date = new Date()
    const hours = date.getHours()
    let timeOfDay
    
    if (hours < 12) {
        timeOfDay = "morning"
    } else if (hours >= 12 && hours < 17) {
        timeOfDay = "afternoon"
    } else {
        timeOfDay = "night"
    }
    return (
        <h1>Good {timeOfDay} to you, sir or madam!</h1>
    )
}

class Greeting extends React.Component {
  render() {
const date = new Date()
    const hours = date.getHours()
    let timeOfDay
    
    if (hours < 12) {
        timeOfDay = "morning"
    } else if (hours >= 12 && hours < 17) {
        timeOfDay = "afternoon"
    } else {
        timeOfDay = "night"
    }

    return (
        <h1>Good {timeOfDay} to you, sir or madam!</h1>
    )
  }    
}




Props are immutable- and can't be changed
Any time you use state- MUST be a class based component
https://scrimba.com/p/p4Mrt9/cQnMDHD
Constructor- method built into JS that initializes this class
super- a global function, goes into Super(parent) class and brings goodies down so App can use it